<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\fuxi.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\fuxi.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060422: Last Updated: Mon Aug 12 00:25:30 2024
<BR><P>
<H3>Maximum Stack Usage =       1432 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; bsp_init &rArr; mecm_config_init &rArr; mecm_get_pdo_size &rArr; get_pdo_map &rArr; sdo_read &rArr; mecm_mailbox_recv &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[1c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from gd32f4xx_it.o(i.BusFault_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[20]">CAN0_EWMC_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[1e]">CAN0_RX0_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[1f]">CAN0_RX1_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[1d]">CAN0_TX_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[4c]">CAN1_EWMC_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[4a]">CAN1_RX0_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[4b]">CAN1_RX1_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[49]">CAN1_TX_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[58]">DCI_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[15]">DMA0_Channel0_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[16]">DMA0_Channel1_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[17]">DMA0_Channel2_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[18]">DMA0_Channel3_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[19]">DMA0_Channel4_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[1a]">DMA0_Channel5_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[1b]">DMA0_Channel6_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[39]">DMA0_Channel7_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[42]">DMA1_Channel0_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[43]">DMA1_Channel1_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[44]">DMA1_Channel2_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[45]">DMA1_Channel3_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[46]">DMA1_Channel4_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[4e]">DMA1_Channel5_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[4f]">DMA1_Channel6_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[50]">DMA1_Channel7_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from gd32f4xx_it.o(i.DebugMon_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[47]">ENET_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[48]">ENET_WKUP_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[3a]">EXMC_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[32]">EXTI10_15_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[21]">EXTI5_9_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[e]">FMC_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[5a]">FPU_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[2a]">I2C0_ER_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[29]">I2C0_EV_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[2c]">I2C1_ER_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[2b]">I2C1_EV_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[53]">I2C2_ER_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[52]">I2C2_EV_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[62]">IPA_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[b]">LVD_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from gd32f4xx_it.o(i.MemManage_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from gd32f4xx_it.o(i.NMI_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from gd32f4xx_it.o(i.PendSV_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[f]">RCU_CTC_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[2d]">SPI0_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[2e]">SPI1_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[3d]">SPI2_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[5d]">SPI3_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[5e]">SPI4_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[5f]">SPI5_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from gd32f4xx_it.o(i.SVC_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from gd32f4xx_it.o(i.SysTick_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[64]">SystemInit</a> from system_gd32f4xx.o(i.SystemInit) referenced from startup_gd32f450_470.o(.text)
 <LI><a href="#[c]">TAMPER_STAMP_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[22]">TIMER0_BRK_TIMER8_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[25]">TIMER0_Channel_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[24]">TIMER0_TRG_CMT_TIMER10_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[23]">TIMER0_UP_TIMER9_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[26]">TIMER1_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[27]">TIMER2_IRQHandler</a> from md_app.o(i.TIMER2_IRQHandler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[28]">TIMER3_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[3c]">TIMER4_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[40]">TIMER5_DAC_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[41]">TIMER6_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[35]">TIMER7_BRK_TIMER11_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[38]">TIMER7_Channel_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[37]">TIMER7_TRG_CMT_TIMER13_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[36]">TIMER7_UP_TIMER12_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[61]">TLI_ER_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[60]">TLI_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[59]">TRNG_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[3e]">UART3_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[3f]">UART4_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[5b]">UART6_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[5c]">UART7_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[2f]">USART0_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[30]">USART1_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[31]">USART2_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[51]">USART5_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[4d]">USBFS_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[34]">USBFS_WKUP_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[55]">USBHS_EP1_In_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[54]">USBHS_EP1_Out_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[57]">USBHS_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[56]">USBHS_WKUP_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from gd32f4xx_it.o(i.UsageFault_Handler) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[a]">WWDGT_IRQHandler</a> from startup_gd32f450_470.o(.text) referenced from startup_gd32f450_470.o(RESET)
 <LI><a href="#[65]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32f450_470.o(.text)
 <LI><a href="#[63]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[65]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(.text)
</UL>
<P><STRONG><a name="[d8]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[66]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d9]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[da]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[db]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[dc]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[dd]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN0_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN0_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN0_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN0_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN1_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DCI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA0_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA0_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA0_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA0_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA0_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA0_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA0_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA0_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ENET_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>EXMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI10_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI5_9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>IPA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCU_CTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIMER0_BRK_TIMER8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIMER0_TRG_CMT_TIMER10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIMER0_UP_TIMER9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIMER5_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIMER6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIMER7_BRK_TIMER11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIMER7_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIMER7_TRG_CMT_TIMER13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIMER7_UP_TIMER12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>TLI_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>TLI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TRNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>UART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>USBFS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBFS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>USBHS_EP1_In_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>USBHS_EP1_Out_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>USBHS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>USBHS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f450_470.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[a6]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_processdata_all
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_get_strings
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_get_generals
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_get_eeprom_info
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdo_read
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_setup_datagram_np
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_setup_datagram_logi
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPWR
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPRD
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_BWR
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_BRD
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_APWR
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_APRD
</UL>

<P><STRONG><a name="[de]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[e0]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[e1]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_get_strings
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_get_sii_info
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_fmmu_pdo2
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_fmmu_pdo1
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pdo_map
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_setup_datagram_np
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_setup_datagram_logi
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_clear_port
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_base_init
</UL>

<P><STRONG><a name="[cc]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_memery_init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdo_read
</UL>

<P><STRONG><a name="[e2]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[67]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[e3]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gd32f4xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTick_Handler &rArr; TimingDelay_Decrement &rArr; sgm_wdg_feed
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimingDelay_Decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>SystemInit</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, system_gd32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; system_clock_config
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(.text)
</UL>
<P><STRONG><a name="[27]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, md_app.o(i.TIMER2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_get
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>TimingDelay_Decrement</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, bsp_systick.o(i.TimingDelay_Decrement))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TimingDelay_Decrement &rArr; sgm_wdg_feed
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sgm_wdg_feed
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f450_470.o(RESET)
</UL>
<P><STRONG><a name="[e4]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[e5]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[e6]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[71]"></a>bsp_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, md_app.o(i.bsp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1432<LI>Call Chain = bsp_init &rArr; mecm_config_init &rArr; mecm_get_pdo_size &rArr; get_pdo_map &rArr; sdo_read &rArr; mecm_mailbox_recv &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eth0_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_config_init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_time2_init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysTick_init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>bsp_time2_init</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, bsp_time.o(i.bsp_time2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bsp_time2_init &rArr; timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_timer_clock_prescaler_config
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[bd]"></a>delay_us</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bsp_systick.o(i.delay_us))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_delay_us
</UL>

<P><STRONG><a name="[7d]"></a>enet_buf_recv</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, md_enet.o(i.enet_buf_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_rxframe_size_get
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_frame_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_data_recv
</UL>

<P><STRONG><a name="[80]"></a>enet_buf_recv_2</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, md_enet.o(i.enet_buf_recv_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = enet_buf_recv_2 &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_rxframe_size_get
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_frame_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test
</UL>

<P><STRONG><a name="[81]"></a>enet_buf_send</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, md_enet.o(i.enet_buf_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = enet_buf_send &rArr; enet_frame_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_frame_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_data_send
</UL>

<P><STRONG><a name="[84]"></a>enet_deinit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gd32f4xx_enet.o(i.enet_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = enet_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_initpara_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_mac_dma_config
</UL>

<P><STRONG><a name="[98]"></a>enet_descriptors_chain_init</STRONG> (Thumb, 162 bytes, Stack size 28 bytes, gd32f4xx_enet.o(i.enet_descriptors_chain_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = enet_descriptors_chain_init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_mac_dma_config
</UL>

<P><STRONG><a name="[88]"></a>enet_enable</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, gd32f4xx_enet.o(i.enet_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = enet_enable &rArr; enet_tx_enable &rArr; enet_txfifo_flush
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_tx_enable
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_rx_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_mac_dma_config
</UL>

<P><STRONG><a name="[7f]"></a>enet_frame_receive</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, gd32f4xx_enet.o(i.enet_frame_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = enet_frame_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_buf_recv
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_buf_recv_2
</UL>

<P><STRONG><a name="[82]"></a>enet_frame_transmit</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, gd32f4xx_enet.o(i.enet_frame_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = enet_frame_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_buf_send
</UL>

<P><STRONG><a name="[90]"></a>enet_init</STRONG> (Thumb, 822 bytes, Stack size 56 bytes, gd32f4xx_enet.o(i.enet_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = enet_init &rArr; enet_phy_config &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_phy_write_read
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_phy_config
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_delay
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_default_init
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_mac_dma_config
</UL>

<P><STRONG><a name="[87]"></a>enet_initpara_reset</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gd32f4xx_enet.o(i.enet_initpara_reset))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_deinit
</UL>

<P><STRONG><a name="[97]"></a>enet_mac_address_set</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gd32f4xx_enet.o(i.enet_mac_address_set))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_mac_dma_config
</UL>

<P><STRONG><a name="[91]"></a>enet_phy_config</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, gd32f4xx_enet.o(i.enet_phy_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = enet_phy_config &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_phy_write_read
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_init
</UL>

<P><STRONG><a name="[94]"></a>enet_phy_write_read</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, gd32f4xx_enet.o(i.enet_phy_write_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = enet_phy_write_read
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_phy_config
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_init
</UL>

<P><STRONG><a name="[99]"></a>enet_rx_desc_immediate_receive_complete_interrupt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f4xx_enet.o(i.enet_rx_desc_immediate_receive_complete_interrupt))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_mac_dma_config
</UL>

<P><STRONG><a name="[8a]"></a>enet_rx_enable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gd32f4xx_enet.o(i.enet_rx_enable))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_enable
</UL>

<P><STRONG><a name="[9c]"></a>enet_rxframe_drop</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, gd32f4xx_enet.o(i.enet_rxframe_drop))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_rxframe_size_get
</UL>

<P><STRONG><a name="[7e]"></a>enet_rxframe_size_get</STRONG> (Thumb, 138 bytes, Stack size 4 bytes, gd32f4xx_enet.o(i.enet_rxframe_size_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = enet_rxframe_size_get
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_rxframe_drop
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_buf_recv
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_buf_recv_2
</UL>

<P><STRONG><a name="[96]"></a>enet_software_reset</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gd32f4xx_enet.o(i.enet_software_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = enet_software_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_mac_dma_config
</UL>

<P><STRONG><a name="[9d]"></a>enet_system_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, md_enet.o(i.enet_system_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = enet_system_init &rArr; enet_mac_dma_config &rArr; enet_init &rArr; enet_phy_config &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_mac_dma_config
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_gpio_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_clock_init
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eth0_init
</UL>

<P><STRONG><a name="[9a]"></a>enet_transmit_checksum_config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f4xx_enet.o(i.enet_transmit_checksum_config))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_mac_dma_config
</UL>

<P><STRONG><a name="[89]"></a>enet_tx_enable</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, gd32f4xx_enet.o(i.enet_tx_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = enet_tx_enable &rArr; enet_txfifo_flush
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_txfifo_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_enable
</UL>

<P><STRONG><a name="[9e]"></a>enet_txfifo_flush</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gd32f4xx_enet.o(i.enet_txfifo_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = enet_txfifo_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_tx_enable
</UL>

<P><STRONG><a name="[a3]"></a>get_idx</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mecm_base.o(i.get_idx))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_processdata_all
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPWR
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPRD
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_BWR
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_BRD
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_APWR
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_APRD
</UL>

<P><STRONG><a name="[d4]"></a>get_mailbox_cnt</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, mecm_mailbox.o(i.get_mailbox_cnt))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdo_read
</UL>

<P><STRONG><a name="[9f]"></a>get_pdo_map</STRONG> (Thumb, 204 bytes, Stack size 56 bytes, mecm_coe.o(i.get_pdo_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 1408<LI>Call Chain = get_pdo_map &rArr; sdo_read &rArr; mecm_mailbox_recv &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdo_read
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_get_pdo_size
</UL>

<P><STRONG><a name="[8f]"></a>gpio_af_set</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, gd32f4xx_gpio.o(i.gpio_af_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_gpio_init
</UL>

<P><STRONG><a name="[d5]"></a>gpio_bit_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f4xx_gpio.o(i.gpio_bit_reset))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sgm_wdg_feed
</UL>

<P><STRONG><a name="[d6]"></a>gpio_bit_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f4xx_gpio.o(i.gpio_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sgm_wdg_feed
</UL>

<P><STRONG><a name="[8d]"></a>gpio_mode_set</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, gd32f4xx_gpio.o(i.gpio_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_gpio_init
</UL>

<P><STRONG><a name="[8e]"></a>gpio_output_options_set</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, gd32f4xx_gpio.o(i.gpio_output_options_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_output_options_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_gpio_init
</UL>

<P><STRONG><a name="[63]"></a>main</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1432<LI>Call Chain = main &rArr; bsp_init &rArr; mecm_config_init &rArr; mecm_get_pdo_size &rArr; get_pdo_map &rArr; sdo_read &rArr; mecm_mailbox_recv &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[a2]"></a>mecm_APRD</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, mecm_base.o(i.mecm_APRD))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = mecm_APRD &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_setup_datagram_np
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_communicate
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_clear_port
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_idx
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_configaddr
</UL>

<P><STRONG><a name="[a8]"></a>mecm_APWR</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, mecm_base.o(i.mecm_APWR))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = mecm_APWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_setup_datagram_np
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_communicate
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_clear_port
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_idx
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_configaddr
</UL>

<P><STRONG><a name="[a9]"></a>mecm_BRD</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, mecm_base.o(i.mecm_BRD))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = mecm_BRD &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_setup_datagram_np
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_communicate
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_clear_port
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_idx
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_scan_slave
</UL>

<P><STRONG><a name="[aa]"></a>mecm_BWR</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, mecm_base.o(i.mecm_BWR))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = mecm_BWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_setup_datagram_np
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_communicate
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_clear_port
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_idx
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_state_change
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_scan_slave
</UL>

<P><STRONG><a name="[ab]"></a>mecm_FPRD</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, mecm_base.o(i.mecm_FPRD))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = mecm_FPRD &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_setup_datagram_np
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_communicate
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_clear_port
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_idx
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_read
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_config_other
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_mailbox_send
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_mailbox_recv
</UL>

<P><STRONG><a name="[ac]"></a>mecm_FPWR</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, mecm_base.o(i.mecm_FPWR))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_setup_datagram_np
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_communicate
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_clear_port
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_idx
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_read
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_pdi
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_master
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_sm_config
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_fmmu_config
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_state_change
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_mailbox_send
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_mailbox_recv
</UL>

<P><STRONG><a name="[ad]"></a>mecm_base_init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, mecm_base.o(i.mecm_base_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mecm_base_init
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eth0_init
</UL>

<P><STRONG><a name="[a7]"></a>mecm_clear_port</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, mecm_base.o(i.mecm_clear_port))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mecm_clear_port
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_processdata_all
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPWR
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPRD
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_BWR
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_BRD
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_APWR
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_APRD
</UL>

<P><STRONG><a name="[a5]"></a>mecm_communicate</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, mecm_base.o(i.mecm_communicate))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_data_send
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_data_recv
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_current_time_us
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_processdata_all
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPWR
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPRD
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_BWR
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_BRD
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_APWR
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_APRD
</UL>

<P><STRONG><a name="[76]"></a>mecm_config_init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, mecm_config.o(i.mecm_config_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1424<LI>Call Chain = mecm_config_init &rArr; mecm_get_pdo_size &rArr; get_pdo_map &rArr; sdo_read &rArr; mecm_mailbox_recv &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_processdata_all
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_state_change
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_mailbox
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_fmmu_pdo
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_configaddr
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_scan_slave
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_memery_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_get_pdo_size
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_get_eeprom_info_all
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_config_other
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[b5]"></a>mecm_config_other</STRONG> (Thumb, 608 bytes, Stack size 40 bytes, mecm_config.o(i.mecm_config_other))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = mecm_config_other &rArr; mecm_FPRD &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPRD
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_config_init
</UL>

<P><STRONG><a name="[ae]"></a>mecm_current_time_us</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, mecm_port.o(i.mecm_current_time_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mecm_current_time_us
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_current_time_us
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_read
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_mailbox_send
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_mailbox_recv
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_communicate
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_data_recv
</UL>

<P><STRONG><a name="[b0]"></a>mecm_data_recv</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, mecm_port.o(i.mecm_data_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_current_time_us
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_buf_recv
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_communicate
</UL>

<P><STRONG><a name="[af]"></a>mecm_data_send</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mecm_port.o(i.mecm_data_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mecm_data_send &rArr; enet_buf_send &rArr; enet_frame_transmit
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_buf_send
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_communicate
</UL>

<P><STRONG><a name="[bc]"></a>mecm_delay_us</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mecm_port.o(i.mecm_delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mecm_delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_read
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_mailbox_send
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_mailbox_recv
</UL>

<P><STRONG><a name="[be]"></a>mecm_eeprom_findsii</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, mecm_eeprom.o(i.mecm_eeprom_findsii))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = mecm_eeprom_findsii &rArr; mecm_eeprom_read_buf &rArr; mecm_eeprom_read &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_read_buf
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_get_strings
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_get_sm
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_get_generals
</UL>

<P><STRONG><a name="[c0]"></a>mecm_eeprom_get_generals</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, mecm_eeprom.o(i.mecm_eeprom_get_generals))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = mecm_eeprom_get_generals &rArr; mecm_eeprom_findsii &rArr; mecm_eeprom_read_buf &rArr; mecm_eeprom_read &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_read_buf
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_findsii
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_get_eeprom_info
</UL>

<P><STRONG><a name="[c1]"></a>mecm_eeprom_get_sii_info</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, mecm_eeprom.o(i.mecm_eeprom_get_sii_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = mecm_eeprom_get_sii_info &rArr; mecm_eeprom_read_buf &rArr; mecm_eeprom_read &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_read_buf
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_get_eeprom_info
</UL>

<P><STRONG><a name="[c2]"></a>mecm_eeprom_get_sm</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, mecm_eeprom.o(i.mecm_eeprom_get_sm))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = mecm_eeprom_get_sm &rArr; mecm_eeprom_findsii &rArr; mecm_eeprom_read_buf &rArr; mecm_eeprom_read &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_read_buf
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_findsii
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_get_eeprom_info
</UL>

<P><STRONG><a name="[c3]"></a>mecm_eeprom_get_strings</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, mecm_eeprom.o(i.mecm_eeprom_get_strings))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = mecm_eeprom_get_strings &rArr; mecm_eeprom_findsii &rArr; mecm_eeprom_read_buf &rArr; mecm_eeprom_read &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_read_buf
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_findsii
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_get_eeprom_info
</UL>

<P><STRONG><a name="[c4]"></a>mecm_eeprom_master</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, mecm_eeprom.o(i.mecm_eeprom_master))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = mecm_eeprom_master &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPWR
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_read_buf
</UL>

<P><STRONG><a name="[c5]"></a>mecm_eeprom_pdi</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, mecm_eeprom.o(i.mecm_eeprom_pdi))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = mecm_eeprom_pdi &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPWR
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_read_buf
</UL>

<P><STRONG><a name="[c6]"></a>mecm_eeprom_read</STRONG> (Thumb, 576 bytes, Stack size 88 bytes, mecm_eeprom.o(i.mecm_eeprom_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = mecm_eeprom_read &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPWR
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPRD
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_delay_us
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_current_time_us
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_read_buf
</UL>

<P><STRONG><a name="[bf]"></a>mecm_eeprom_read_buf</STRONG> (Thumb, 360 bytes, Stack size 48 bytes, mecm_eeprom.o(i.mecm_eeprom_read_buf))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = mecm_eeprom_read_buf &rArr; mecm_eeprom_read &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_read
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_pdi
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_master
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_findsii
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_get_strings
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_get_sm
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_get_sii_info
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_get_generals
</UL>

<P><STRONG><a name="[75]"></a>mecm_eth0_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mecm_port.o(i.mecm_eth0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = mecm_eth0_init &rArr; enet_system_init &rArr; enet_mac_dma_config &rArr; enet_init &rArr; enet_phy_config &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_base_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_system_init
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[c7]"></a>mecm_fmmu_config</STRONG> (Thumb, 286 bytes, Stack size 48 bytes, mecm_fmmu.o(i.mecm_fmmu_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = mecm_fmmu_config &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPWR
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_fmmu_pdo2
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_fmmu_pdo1
</UL>

<P><STRONG><a name="[d0]"></a>mecm_fmmu_config_add</STRONG> (Thumb, 294 bytes, Stack size 12 bytes, mecm_fmmu.o(i.mecm_fmmu_config_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mecm_fmmu_config_add
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_fmmu_pdo2
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_fmmu_pdo1
</UL>

<P><STRONG><a name="[c8]"></a>mecm_get_eeprom_info</STRONG> (Thumb, 328 bytes, Stack size 24 bytes, mecm_config.o(i.mecm_get_eeprom_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = mecm_get_eeprom_info &rArr; mecm_eeprom_get_strings &rArr; mecm_eeprom_findsii &rArr; mecm_eeprom_read_buf &rArr; mecm_eeprom_read &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_sm_config_add
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_get_strings
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_get_sm
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_get_sii_info
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_eeprom_get_generals
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_get_eeprom_info_all
</UL>

<P><STRONG><a name="[b4]"></a>mecm_get_eeprom_info_all</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, mecm_config.o(i.mecm_get_eeprom_info_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = mecm_get_eeprom_info_all &rArr; mecm_get_eeprom_info &rArr; mecm_eeprom_get_strings &rArr; mecm_eeprom_findsii &rArr; mecm_eeprom_read_buf &rArr; mecm_eeprom_read &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_get_eeprom_info
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_config_init
</UL>

<P><STRONG><a name="[b7]"></a>mecm_get_pdo_size</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, mecm_config.o(i.mecm_get_pdo_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416<LI>Call Chain = mecm_get_pdo_size &rArr; get_pdo_map &rArr; sdo_read &rArr; mecm_mailbox_recv &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pdo_map
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_config_init
</UL>

<P><STRONG><a name="[ca]"></a>mecm_mailbox_recv</STRONG> (Thumb, 512 bytes, Stack size 88 bytes, mecm_mailbox.o(i.mecm_mailbox_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = mecm_mailbox_recv &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPWR
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPRD
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_delay_us
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_current_time_us
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdo_read
</UL>

<P><STRONG><a name="[cb]"></a>mecm_mailbox_send</STRONG> (Thumb, 338 bytes, Stack size 80 bytes, mecm_mailbox.o(i.mecm_mailbox_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = mecm_mailbox_send &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPWR
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPRD
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_delay_us
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_current_time_us
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sdo_read
</UL>

<P><STRONG><a name="[b1]"></a>mecm_memery_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mecm_config.o(i.mecm_memery_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mecm_memery_init
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_config_init
</UL>

<P><STRONG><a name="[ba]"></a>mecm_processdata_all</STRONG> (Thumb, 972 bytes, Stack size 88 bytes, mecm_pdo.o(i.mecm_processdata_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = mecm_processdata_all &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_setup_datagram_np
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_setup_datagram_logi
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_communicate
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_clear_port
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_idx
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_config_init
</UL>

<P><STRONG><a name="[b2]"></a>mecm_scan_slave</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, mecm_config.o(i.mecm_scan_slave))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = mecm_scan_slave &rArr; mecm_BWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_BWR
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_BRD
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_config_init
</UL>

<P><STRONG><a name="[b3]"></a>mecm_set_configaddr</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, mecm_config.o(i.mecm_set_configaddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = mecm_set_configaddr &rArr; mecm_APWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_APWR
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_APRD
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_config_init
</UL>

<P><STRONG><a name="[b8]"></a>mecm_set_sm_fmmu_pdo</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, mecm_config.o(i.mecm_set_sm_fmmu_pdo))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = mecm_set_sm_fmmu_pdo &rArr; mecm_set_sm_fmmu_pdo2 &rArr; mecm_fmmu_config &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_fmmu_pdo2
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_fmmu_pdo1
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_config_init
</UL>

<P><STRONG><a name="[ce]"></a>mecm_set_sm_fmmu_pdo1</STRONG> (Thumb, 768 bytes, Stack size 48 bytes, mecm_config.o(i.mecm_set_sm_fmmu_pdo1))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = mecm_set_sm_fmmu_pdo1 &rArr; mecm_fmmu_config &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_sm_config
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_fmmu_config_add
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_fmmu_config
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_state_change
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_fmmu_pdo
</UL>

<P><STRONG><a name="[cf]"></a>mecm_set_sm_fmmu_pdo2</STRONG> (Thumb, 840 bytes, Stack size 48 bytes, mecm_config.o(i.mecm_set_sm_fmmu_pdo2))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = mecm_set_sm_fmmu_pdo2 &rArr; mecm_fmmu_config &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_sm_config
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_fmmu_config_add
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_fmmu_config
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_state_change
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_fmmu_pdo
</UL>

<P><STRONG><a name="[b6]"></a>mecm_set_sm_mailbox</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, mecm_config.o(i.mecm_set_sm_mailbox))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = mecm_set_sm_mailbox &rArr; mecm_sm_config &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_sm_config
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_config_init
</UL>

<P><STRONG><a name="[cd]"></a>mecm_setup_datagram_logi</STRONG> (Thumb, 416 bytes, Stack size 56 bytes, mecm_base.o(i.mecm_setup_datagram_logi))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mecm_setup_datagram_logi
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_processdata_all
</UL>

<P><STRONG><a name="[a4]"></a>mecm_setup_datagram_np</STRONG> (Thumb, 420 bytes, Stack size 56 bytes, mecm_base.o(i.mecm_setup_datagram_np))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mecm_setup_datagram_np
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_processdata_all
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPWR
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPRD
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_BWR
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_BRD
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_APWR
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_APRD
</UL>

<P><STRONG><a name="[d1]"></a>mecm_sm_config</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, mecm_sm.o(i.mecm_sm_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = mecm_sm_config &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPWR
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_mailbox
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_fmmu_pdo2
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_fmmu_pdo1
</UL>

<P><STRONG><a name="[c9]"></a>mecm_sm_config_add</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, mecm_sm.o(i.mecm_sm_config_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mecm_sm_config_add
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_get_eeprom_info
</UL>

<P><STRONG><a name="[b9]"></a>mecm_state_change</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, mecm_config.o(i.mecm_state_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = mecm_state_change &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_FPWR
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_BWR
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_mailbox
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_fmmu_pdo2
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_set_sm_fmmu_pdo1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_config_init
</UL>

<P><STRONG><a name="[73]"></a>nvic_configuration</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bsp_sys.o(i.nvic_configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nvic_configuration &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[d3]"></a>nvic_irq_enable</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, gd32f4xx_misc.o(i.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_configuration
</UL>

<P><STRONG><a name="[d2]"></a>nvic_priority_group_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f4xx_misc.o(i.nvic_priority_group_set))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_configuration
</UL>

<P><STRONG><a name="[bb]"></a>osal_current_time_us</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp_systick.o(i.osal_current_time_us))
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_current_time_us
</UL>

<P><STRONG><a name="[9b]"></a>rcu_clock_freq_get</STRONG> (Thumb, 264 bytes, Stack size 84 bytes, gd32f4xx_rcu.o(i.rcu_clock_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_phy_config
</UL>

<P><STRONG><a name="[77]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_periph_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_gpio_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_clock_init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_time2_init
</UL>

<P><STRONG><a name="[86]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_periph_reset_disable))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_deinit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>

<P><STRONG><a name="[85]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_periph_reset_enable))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_deinit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
</UL>

<P><STRONG><a name="[78]"></a>rcu_timer_clock_prescaler_config</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32f4xx_rcu.o(i.rcu_timer_clock_prescaler_config))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_time2_init
</UL>

<P><STRONG><a name="[a0]"></a>sdo_read</STRONG> (Thumb, 804 bytes, Stack size 1096 bytes, mecm_coe.o(i.sdo_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 1352<LI>Call Chain = sdo_read &rArr; mecm_mailbox_recv &rArr; mecm_FPWR &rArr; mecm_communicate &rArr; mecm_data_recv &rArr; enet_buf_recv &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_mailbox_send
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mecm_mailbox_recv
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mailbox_cnt
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pdo_map
</UL>

<P><STRONG><a name="[70]"></a>sgm_wdg_feed</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, bsp_iwdg.o(i.sgm_wdg_feed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sgm_wdg_feed
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimingDelay_Decrement
</UL>

<P><STRONG><a name="[72]"></a>sysTick_init</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, bsp_systick.o(i.sysTick_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sysTick_init
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
</UL>

<P><STRONG><a name="[8c]"></a>syscfg_enet_phy_interface_config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f4xx_syscfg.o(i.syscfg_enet_phy_interface_config))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_gpio_init
</UL>

<P><STRONG><a name="[a1]"></a>test</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, md_app.o(i.test))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = test &rArr; enet_buf_recv_2 &rArr; enet_frame_receive
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_buf_send
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_buf_recv_2
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>timer_deinit</STRONG> (Thumb, 374 bytes, Stack size 8 bytes, gd32f4xx_timer.o(i.timer_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_time2_init
</UL>

<P><STRONG><a name="[7c]"></a>timer_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f4xx_timer.o(i.timer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_time2_init
</UL>

<P><STRONG><a name="[7a]"></a>timer_init</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, gd32f4xx_timer.o(i.timer_init))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_time2_init
</UL>

<P><STRONG><a name="[7b]"></a>timer_interrupt_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f4xx_timer.o(i.timer_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_time2_init
</UL>

<P><STRONG><a name="[6f]"></a>timer_interrupt_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gd32f4xx_timer.o(i.timer_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
</UL>

<P><STRONG><a name="[6e]"></a>timer_interrupt_flag_get</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32f4xx_timer.o(i.timer_interrupt_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[d7]"></a>system_clock_200m_25m_hxtal</STRONG> (Thumb, 240 bytes, Stack size 0 bytes, system_gd32f4xx.o(i.system_clock_200m_25m_hxtal))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[6d]"></a>system_clock_config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_gd32f4xx.o(i.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = system_clock_config
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_200m_25m_hxtal
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[93]"></a>enet_default_init</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, gd32f4xx_enet.o(i.enet_default_init))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_init
</UL>

<P><STRONG><a name="[92]"></a>enet_delay</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gd32f4xx_enet.o(i.enet_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = enet_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_phy_config
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_init
</UL>

<P><STRONG><a name="[83]"></a>enet_clock_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, md_enet.o(i.enet_clock_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = enet_clock_init
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_system_init
</UL>

<P><STRONG><a name="[8b]"></a>enet_gpio_init</STRONG> (Thumb, 400 bytes, Stack size 8 bytes, md_enet.o(i.enet_gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = enet_gpio_init &rArr; gpio_output_options_set
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscfg_enet_phy_interface_config
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_system_init
</UL>

<P><STRONG><a name="[95]"></a>enet_mac_dma_config</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, md_enet.o(i.enet_mac_dma_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = enet_mac_dma_config &rArr; enet_init &rArr; enet_phy_config &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_transmit_checksum_config
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_software_reset
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_rx_desc_immediate_receive_complete_interrupt
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_mac_address_set
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_enable
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_descriptors_chain_init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enet_system_init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
